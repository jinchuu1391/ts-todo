{
  "컴포넌트 기본 템플릿": {
    "scope": "typescriptreact",
    "prefix": "ccc",
    "body": [
      "import classnames from 'classnames'",
      "import { Box, makeStyles, Theme } from '@material-ui/core'",
      "import { observer, useLocalStore } from 'mobx-react-lite'",
      "import * as React from 'react'",
      "import { useTranslation } from 'react-i18next'",
      "",
      "interface Props {",
      "  name?: string",
      "  children?: React.ReactNode",
      "}",
      "",
      "export const $TM_FILENAME_BASE = observer((props: Props) => {",
      "  const store = useStore(props)",
      "  const styles = useStyles(store)",
      "  const components = useComponents(store)",
      "  return (",
      "    <div className={classnames('mb-2', styles.root)}>",
      "      $TM_FILENAME_BASE",
      "      {props.children}",
      "      <components.Component />",
      "    </div>",
      "  )",
      "})",
      "",
      "const useStore = (props: Props) => {",
      "  const { t } = useTranslation()",
      "  const store = useLocalStore((_: Props) => ({",
      "     action(): void {",
      "       // Do whatever",
      "     },",
      "",
      "     get computed(): string {",
      "       return 'Hello, world!!'",
      "     },",
      "",
      "     state: false,",
      "",
      "     t(name: string): string {",
      "       return t('Common.' + name)",
      "     },",
      "  }), props)",
      "  ",
      "",
      "  React.useEffect(() => {",
      "    //",
      "  })",
      "",
      "  React.useEffect(() => {",
      "    store.state = false",
      "  }, [props.name])",
      "",
      "  return store",
      "}",
      "",
      "type Store = ReturnType<typeof useStore>",
      "",
      "const useComponents = (store: Store) => {",
      "  const components = useLocalStore(",
      "    (_: Store) => ({",
      "      get Component() {",
      "        return observer(() => (",
      "          <div>",
      "            <p>{store.computed}</p>",
      "          </div>",
      "        ))",
      "      },",
      "    }),",
      "    store,",
      "  )",
      "",
      "  return components",
      "}",
      "",
      "const useStyles = makeStyles((_: Theme) => ({",
      "  '@media (max-width: 575px)': {",
      "    root: {",
      "      marginTop: -60,",
      "    },",
      "  },",
      "  root: {",
      "    '& .btn': {",
      "      height: '100%'",
      "    },",
      "    width: '100%',",
      "  },",
      "  something: (store: Store) => ({",
      "    display: store.state ? 'block' : 'none',",
      "  }),",
      "}))",
      ""
    ],
    "description": ""
  },
  "컴포넌트 간소화 템플릿": {
    "scope": "typescriptreact",
    "prefix": "ddd",
    "body": [
      "import { Box, makeStyles, Theme } from '@material-ui/core'",
      "import { observer, useLocalStore } from 'mobx-react-lite'",
      "import * as React from 'react'",
      "import { useTranslation } from 'react-i18next'",
      "",
      "interface Props {",
      "  children?: React.ReactNode",
      "}",
      "",
      "export const $TM_FILENAME_BASE = observer((props: Props) => {",
      "  const store = useStore(props)",
      "  const styles = useStyles(store)",
      "  return (",
      "    <Box>",
      "          ",
      "    </Box>",
      "  )",
      "})",
      "",
      "const useStore = (props: Props) => {",
      "  const { t } = useTranslation()",
      "  const store = useLocalStore((_: Props) => ({",
      "",
      "     t(name: string): string {",
      "       return t('Common.' + name)",
      "     },",
      "  }), props)",
      "",
      "  return store",
      "}",
      "",
      "const useStyles = makeStyles((_: Theme) => ({",
      "}))",
      ""
    ],
    "description": ""
  }
}